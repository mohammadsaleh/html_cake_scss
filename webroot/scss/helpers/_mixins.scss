// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype",
          eot: "embedded-opentype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}
@mixin iransans() {
  $posfixes : '', '-Light', '-Bold', '-Medium', '-UltraLight' ;
  $styles : (
      '': ('style': normal, 'weight': normal),
      '-Light': ('style': normal, 'weight': 100),
      '-Bold': ('style': normal, 'weight': bold),
      '-Medium': ('style': normal, 'weight': 600),
      '-UltraLight': ('style': normal, 'weight': 100),
  );
  @each $posfix in $posfixes {
    $fontFileName : $font-iransans + $posfix + '-web';
    @include font-face('iransans', $fontFileName, map-get(map-get($styles, $posfix), 'weight'), map-get(map-get($styles, $posfix), 'style'), eot ttf woff woff2);
  }
}
// =============================================================================
// Background image
// =============================================================================
@mixin background-image($name, $size:false){
  background-image: url($name);
  @if($size){
    background-size: $size;
  }
}

//===============================================================//
//      .fadeIn {                                                //
//          @include animate-prefixer(animation, fadeIn);        //
//      }                                                        //
//      @include keyframe(fadeIn) {                      //
//          0% {opacity: 0;}                                     //
//          100% {opacity: 1;}                                   //
//      }                                                        //
//===============================================================//

@mixin keyframe($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

//===============================================================//
//      .fadeIn {                                                //
//          @include animate-prefixer(animation, 'fadeIn');        //
//      }                                                        //
//===============================================================//
@mixin prefixer($property, $value...) {
  -webkit-#{$property}: unquote('#{$value}');
  -moz-#{$property}: unquote('#{$value}');
  -o-#{$property}: unquote('#{$value}');
  #{$property}: unquote('#{$value}');
}
//===============================================================//
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

@mixin responsive($size){
  @if($size == small) {
    @media (min-width: $screen-sm-min) {
      @content;
    }
  }
  @else if($size == medium) {
    @media (min-width: $screen-md-min) {
      @content;
    }
  }
  @else if($size == large) {
    @media (min-width: $screen-lg-min) {
      @content;
    }
  }
}

@mixin border-radius($size){
  -webkit-border-radius: $size;
  -moz-border-radius: $size;
  border-radius: $size;
}

@mixin switcher(){
  @include keyframe(transTo){
    from{
      opacity: 1;
    }
    50%{
      opacity: 0;
    }
    to{
      opacity: 1;
      @include prefixer(transform, translate(-#{$switch-input-position}px));
    }
  }
  @include keyframe(transFrom){
    from{
      opacity: 1;
    }
    50%{
      opacity: 0;
    }
    to{
      opacity: 1;
      @include prefixer(transform, translate(#{$switch-input-position}px));
    }
  }
}

@mixin transition($transition...) {
  -webkit-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}